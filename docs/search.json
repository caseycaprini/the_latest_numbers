{
  "articles": [
    {
      "path": "2022-nfl-team-metrics.html",
      "title": "2022 NFL Team Metrics",
      "description": "Team time average metrics for the 2021 regular season.\n",
      "author": [
        {
          "name": "Casey Caprini",
          "url": {}
        }
      ],
      "date": "01-04-2023",
      "contents": "\r\nPackages Used\r\n\r\n\r\nShow code\r\n\r\nlibrary(tidyverse)\r\nlibrary(nflfastR)\r\nlibrary(reactable)\r\nlibrary(reactablefmtr)\r\nlibrary(nflplotR)\r\n\r\n\r\nCode to Generate Data\r\n\r\n\r\nShow code\r\n\r\ntime_avg_df <- nfltools::nfl_mvt_season(year = 2022) %>%\r\n  # Remove BUF @ CIN in Week 17\r\n  filter((week == 17 & team %in% c(\"CIN\", \"BUF\")) == F) %>%\r\n  mutate(expected_win_percentage = exp(0.31 * time_avg_lead)/(1 + exp(0.31 * time_avg_lead))) %>%\r\n  filter(is.na(time_avg_lead) == F) %>%\r\n  group_by(team) %>%\r\n  summarize(time_avg_lead = mean(time_avg_lead, na.rm = T),\r\n            time_avg_wins = sum(expected_win_percentage, na.rm = T),\r\n            time_avg_win_percent = time_avg_wins/n()) %>%\r\n  mutate(time_avg_std = scale(time_avg_lead))\r\n\r\npenalty_yards_gained <- function(df){\r\n  df %>%\r\n    mutate(yards_gained = ifelse(play_type_nfl == \"PENALTY\",\r\n                                 ifelse(penalty_team == posteam,\r\n                                        -1 * penalty_yards,\r\n                                        penalty_yards),\r\n                                 yards_gained)) %>%\r\n    return()\r\n}\r\n\r\npbp_df <- nflfastR::load_pbp(2022) %>%\r\n  filter(season_type == \"REG\") %>%\r\n  # Remove BUF @ CIN in Week 17\r\n  filter((week == 17 & away_team == \"BUF\") == F) %>%\r\n  filter(play_type_nfl %in% c(\"GAME_START\",\r\n                              \"KICK_OFF\",\r\n                              \"PUNT\",\r\n                              \"TIMEOUT\",\r\n                              \"FIELD_GOAL\",\r\n                              \"XP_KICK\",\r\n                              \"END_QUARTER\",\r\n                              \"END_GAME\",\r\n                              \"PAT2\",\r\n                              \"FREE_KICK\",\r\n                              \"COMMENT\") == F) %>%\r\n  filter(is.na(play_type_nfl) == F) %>%\r\n  filter(play_type %in% c(\"qb_kneel\",\r\n                          \"qb_spike\") == F) %>%\r\n  filter(grepl(\"(Punt formation)\", desc) == F) %>%\r\n  filter(grepl(\", offsetting.\", desc) == F) %>%\r\n  penalty_yards_gained()\r\n\r\nmod_rand_int <- lme4::lmer(yards_gained ~ 1 + (1|posteam) + (1|defteam),\r\n                           data = pbp_df)\r\n\r\noff_avg <- pbp_df %>%\r\n  group_by(posteam) %>%\r\n  summarize(off_yards_per_snap = mean(yards_gained)) %>%\r\n  rename(team = posteam)\r\n\r\noff_rand_int <- coef(mod_rand_int)$posteam %>%\r\n  rownames_to_column(var = \"team\") %>%\r\n  rename(off_adj_yards_per_snap = `(Intercept)`)\r\n\r\ndef_avg <- pbp_df %>%\r\n  group_by(defteam) %>%\r\n  summarize(def_yards_per_snap = mean(yards_gained)) %>%\r\n  rename(team = defteam)\r\n\r\ndef_rand_int <- coef(mod_rand_int)$defteam %>%\r\n  rownames_to_column(var = \"team\") %>%\r\n  rename(def_adj_yards_per_snap = `(Intercept)`)\r\n\r\n\r\n\r\nper_snap_df <- off_avg %>%\r\n  left_join(off_rand_int,\r\n            by = \"team\") %>%\r\n  left_join(def_avg,\r\n            by = \"team\") %>%\r\n  left_join(def_rand_int,\r\n            by = \"team\")\r\n\r\n\r\nmean_def_adj_per_snap <- mean(per_snap_df$def_adj_yards_per_snap)\r\nmean_off_adj_per_snap <- mean(per_snap_df$off_adj_yards_per_snap)\r\n\r\noff_post_strat <- pbp_df %>%\r\n  group_by(week, posteam, defteam) %>%\r\n  summarize(n = n()) %>%\r\n  rename(team = posteam) %>%\r\n  left_join(per_snap_df %>%\r\n              select(team, def_adj_yards_per_snap),\r\n            by = c(\"defteam\" = \"team\")) %>%\r\n  ungroup() %>%\r\n  group_by(team) %>%\r\n  summarize(off_opp_adj = mean_def_adj_per_snap / weighted.mean(def_adj_yards_per_snap, n))\r\n\r\ndef_post_strat <- pbp_df %>%\r\n  group_by(week, defteam, posteam) %>%\r\n  summarize(n = n()) %>%\r\n  rename(team = defteam) %>%\r\n  left_join(per_snap_df %>%\r\n              select(team, off_adj_yards_per_snap),\r\n            by = c(\"posteam\" = \"team\")) %>%\r\n  ungroup() %>%\r\n  group_by(team) %>%\r\n  summarize(def_opp_adj = mean_off_adj_per_snap / weighted.mean(off_adj_yards_per_snap, n))\r\n\r\n\r\n\r\nper_snap_df <- per_snap_df %>%\r\n  left_join(def_post_strat,\r\n            by = \"team\") %>%\r\n  left_join(off_post_strat,\r\n            by = \"team\") %>%\r\n  mutate(off_adj_yards_per_snap = off_adj_yards_per_snap * off_opp_adj,\r\n         def_adj_yards_per_snap = def_adj_yards_per_snap * def_opp_adj,\r\n         off_opp_adj = NULL,\r\n         def_opp_adj = NULL)\r\n\r\ndf <- teams_colors_logos %>%\r\n  select(team_logo_espn,\r\n         team_abbr) %>%\r\n  rename(team = team_abbr) %>%\r\n  left_join(time_avg_df,\r\n            by = \"team\") %>%\r\n  # Removes old team names present in teams_colors_logos data.frame\r\n  filter(is.na(time_avg_lead) == F) %>%\r\n  left_join(per_snap_df,\r\n            by = \"team\") %>%\r\n  mutate(yards_per_snap_diff = off_yards_per_snap - def_yards_per_snap,\r\n         adj_yards_per_snap_diff = off_adj_yards_per_snap - def_adj_yards_per_snap) %>%\r\n  mutate(adj_per_snap_std = scale(adj_yards_per_snap_diff))\r\n\r\n\r\nGraphical Summaries\r\n(Time) Average Lead\r\nStatistics\r\n\r\n\r\nShow code\r\n\r\np_time_avg <- df %>%\r\n  ggplot(aes(x = time_avg_lead, y = time_avg_win_percent)) +\r\n  geom_vline(xintercept = 0,\r\n             color = \"black\") +\r\n  geom_hline(yintercept = 0.5,\r\n             color = \"black\") +\r\n  geom_nfl_logos(aes(team_abbr = team),\r\n                 width = 0.05) +\r\n  coord_cartesian(ylim = c(0.2, 0.8)) +\r\n  scale_x_continuous(breaks = seq(from = -24, to = 24, by = 3),\r\n                     minor_breaks = NULL) +\r\n  scale_y_continuous(breaks = seq(from = 0.2, to = 0.8, by = 0.2),\r\n                     minor_breaks = NULL,\r\n                     labels = scales::percent) +\r\n  theme_light() +\r\n  labs(title = \"2022 NFL Time Average Lead Performance\",\r\n       x = \"Regulation (Time) Average Lead (Points)\",\r\n       y = \"Time Average Win Percentage\",\r\n       caption = \"Data via nflfastR. Plot via nflplotR.\")\r\n\r\nggsave(filename = \"time_avg_plot.png\",\r\n       plot = p_time_avg,\r\n       height = 5.25,\r\n       width = 5,\r\n       units = \"in\",\r\n       dpi = \"retina\")\r\n\r\n\r\n\r\n\r\n\r\nShow code\r\n\r\np_time_avg_standardized <- df %>%\r\n  arrange(time_avg_lead) %>%\r\n  mutate(rank = row_number(),\r\n         time_avg_lead = scale(time_avg_lead)) %>%\r\n  ggplot(aes(x = time_avg_lead,\r\n             y = rank)) +\r\n  geom_hline(yintercept = c(0.5, 8.5, 16.5, 24.5, 32.5),\r\n             color = \"dark gray\",\r\n             linetype = \"dashed\") +\r\n  geom_vline(xintercept = c(-2, -1, 0, 1, 2),\r\n             color = \"dark gray\") +\r\n  geom_nfl_logos(aes(team_abbr = team),\r\n                 width = 0.05) +\r\n  scale_x_continuous(minor_breaks = NULL,\r\n                     breaks = seq(-4, 4, by = 0.5)) +\r\n  scale_y_continuous(breaks = NULL,\r\n                     minor_breaks = NULL) +\r\n  theme_light() +\r\n  labs(title = \"2022 NFL Time Average Lead Rankings\",\r\n       x = \"Time Average Lead: Standardized\",\r\n       y = NULL,\r\n       caption = \"Data: nflfastR | Plot: nflplotR\")\r\n\r\nggsave(\"nfl_time_avg_lead_standardized.png\",\r\n       plot = p_time_avg_standardized,\r\n       units = \"in\",\r\n       height = 5.25,\r\n       width = 5,\r\n       dpi = \"retina\")\r\n\r\n\r\n\r\nAdjusted Yards Per Play\r\n\r\n\r\nShow code\r\n\r\np_adj_yards_per_snap <- df %>%\r\n  ggplot(aes(x = off_adj_yards_per_snap,\r\n             y = def_adj_yards_per_snap)) +\r\n  geom_vline(xintercept = mean(df$off_adj_yards_per_snap),\r\n             color = \"black\") +\r\n  geom_hline(yintercept = mean(df$def_adj_yards_per_snap)) +\r\n  geom_nfl_logos(aes(team_abbr = team),\r\n                 width = 0.05) +\r\n  scale_x_continuous(minor_breaks = NULL) +\r\n  scale_y_reverse(minor_breaks = NULL) +\r\n  theme_light() +\r\n  labs(title = \"2022 NFL Adjusted Yards Per Snap Performance\",\r\n       subtitle = \"Excludes Kneels/Spikes. Includes Penalty Yardage.\\nyards_gained ~ 1 + (1|posteam) + (1|defteam)\",\r\n       x = \"Offense Adjusted Yards/Snap Gained\",\r\n       y = \"Defense Adjusted Yards/Snap Allowed\",\r\n       caption = \"Data: nflfastR | Plot: nflplotR | Model: lme4\")\r\n\r\nggsave(\"nfl_adj_per_snap_units.png\",\r\n       plot = p_adj_yards_per_snap,\r\n       units = \"in\",\r\n       height = 5.25,\r\n       width = 5,\r\n       dpi = \"retina\")\r\n\r\n\r\n\r\n\r\n\r\nShow code\r\n\r\np_per_snap_standardized <- df %>%\r\n  arrange(adj_per_snap_std) %>%\r\n  mutate(rank = row_number()) %>%\r\n  ggplot(aes(x = adj_per_snap_std,\r\n             y = rank)) +\r\n  geom_hline(yintercept = c(0.5, 8.5, 16.5, 24.5, 32.5),\r\n             color = \"dark gray\",\r\n             linetype = \"dashed\") +\r\n  geom_vline(xintercept = seq(-2, 2, by = 1),\r\n             color = \"dark gray\") +\r\n  geom_nfl_logos(aes(team_abbr = team),\r\n                 width = 0.05) +\r\n  scale_x_continuous(minor_breaks = NULL,\r\n                     breaks = seq(-4, 4, by = 0.5)) +\r\n  scale_y_continuous(breaks = NULL,\r\n                     minor_breaks = NULL) +\r\n  theme_light() +\r\n  labs(title = \"2022 NFL Adjusted Yards/Snap Differential Rankings\",\r\n       subtitle = \"Excludes Kneels/Spikes. Includes Penalty Yardage.\\nyards_gained ~ 1 + (1|posteam) + (1|defteam)\",\r\n       x = \"Adjusted Yards/Snap Differential: Standardized\",\r\n       y = NULL,\r\n       caption = \"Data: nflfastR | Plot: nflplotR | Model: lme4\")\r\n\r\nggsave(\"nfl_adj_per_snap_standardized.png\",\r\n       plot = p_per_snap_standardized,\r\n       units = \"in\",\r\n       height = 5.25,\r\n       width = 5,\r\n       dpi = \"retina\")\r\n\r\n\r\n\r\nNFL Power Ranking\r\n\r\n\r\nShow code\r\n\r\np_composite_rank <- df %>%\r\n  mutate(composite = ((2*adj_per_snap_std) + time_avg_std)/3) %>%\r\n  arrange(composite) %>%\r\n  mutate(composite_rank = row_number()) %>%\r\n  ggplot(aes(x = composite,\r\n             y = composite_rank)) +\r\n    geom_hline(yintercept = c(0.5, 8.5, 16.5, 24.5, 32.5),\r\n               color = \"dark gray\",\r\n               linetype = \"dashed\") +\r\n  geom_vline(xintercept = seq(-2, 2, by = 1),\r\n             color = \"dark gray\") +\r\n  geom_nfl_logos(aes(team_abbr = team),\r\n                 width = 0.05) +\r\n    scale_x_continuous(minor_breaks = NULL,\r\n                     breaks = seq(-4, 4, by = 0.5)) +\r\n  scale_y_continuous(breaks = NULL,\r\n                     minor_breaks = NULL) +\r\n  theme_light() +\r\n  labs(x = \"Team Quality (Standardized)\",\r\n       y = NULL,\r\n       title = \"NFL Power Ranking\",\r\n       subtitle = \"2 Parts Adjusted Yards/Snap Differential,\\n1 Part Time Average Lead\")\r\n\r\nggsave(\"nfl_composite_rank.png\",\r\n       plot = p_composite_rank,\r\n       units = \"in\",\r\n       height = 5.25,\r\n       width = 5,\r\n       dpi = \"retina\")\r\n\r\n\r\n\r\nTable\r\n\r\n\r\nShow code\r\n\r\ndf %>%\r\n  mutate(time_avg_std = as.numeric(time_avg_std),\r\n         adj_per_snap_std = as.numeric(adj_per_snap_std)) %>%\r\n  reactable(\r\n    theme = pff(),\r\n    height = 675,\r\n    defaultColDef = colDef(align = \"center\",\r\n                           format = colFormat(digits = 1)),\r\n    defaultSortOrder = \"desc\",\r\n    columns = list(\r\n      team_logo_espn = colDef(name = \" \",\r\n                              sortable = F,\r\n                              style = list(position = \"sticky\",\r\n                                           left = 0,\r\n                                           background = \"#fff\",\r\n                                           zIndex = 1),\r\n                              cell = embed_img(),\r\n                              width = 40),\r\n      team = colDef(name = \"Team\",\r\n                    width = 60,\r\n                    style = list(position = \"sticky\",\r\n                                 left = 40,\r\n                                 background = \"#fff\",\r\n                                 zIndex = 1)),\r\n      time_avg_lead = colDef(name = \"Time Average Lead\",\r\n                             format = colFormat(digits = 1)),\r\n      time_avg_std = colDef(name = \"(Std) Time Average Lead\",\r\n                            format = colFormat(digits = 2)),\r\n      time_avg_wins = colDef(name = \"Expected Wins\",\r\n                             format = colFormat(digits = 1)),\r\n      time_avg_win_percent = colDef(name = \"Expected Win Percentage\",\r\n                             format = colFormat(digits = 3)),\r\n      off_yards_per_snap = colDef(name = \"Yards/Snap\",\r\n                                  format = colFormat(digits = 1)),\r\n      off_adj_yards_per_snap = colDef(name = \"Adj Yards/Snap\",\r\n                                      format = colFormat(digits = 1)),\r\n      def_yards_per_snap = colDef(name = \"Yards/Snap\",\r\n                                  format = colFormat(digits = 1)),\r\n      def_adj_yards_per_snap = colDef(name = \"Adj Yards/Snap\",\r\n                                      format = colFormat(digits = 1)),\r\n      yards_per_snap_diff = colDef(name = \"Yards/Snap Diff\",\r\n                                   format = colFormat(digits = 2)),\r\n      adj_yards_per_snap_diff = colDef(name = \"Adj Yards/Snap Diff\",\r\n                                       format = colFormat(digits = 2)),\r\n      adj_per_snap_std = colDef(name = \"(Std) Adj Yards/Snap Diff\",\r\n                                format = colFormat(digits = 1))\r\n    ),\r\n    columnGroups = list(\r\n      colGroup(name = \"Time Average Stats\",\r\n               columns = c(\"time_avg_lead\",\r\n                           \"time_avg_wins\",\r\n                           \"time_avg_win_percent\",\r\n                           \"time_avg_std\")),\r\n      colGroup(name = \"Offense\",\r\n               columns = c(\"off_yards_per_snap\",\r\n                           \"off_adj_yards_per_snap\")),\r\n      colGroup(name = \"Defense\",\r\n               columns = c(\"def_yards_per_snap\",\r\n                           \"def_adj_yards_per_snap\")),\r\n      colGroup(name = \"Differential\",\r\n               columns = c(\"yards_per_snap_diff\",\r\n                           \"adj_yards_per_snap_diff\",\r\n                           \"adj_per_snap_std\"))\r\n      ),\r\n    pagination = F,\r\n    highlight = T,\r\n    bordered = T,\r\n    defaultSorted = c(\"time_avg_lead\")\r\n  )\r\n\r\n\r\n\r\nGlossary\r\nDescription of Metrics:\r\nTime Average Lead:\r\nAt any give point in regulation in the 2022 season, team ___ led by\r\nan average of ___ points.\r\n\r\nYards/Snap:\r\nAverage yards/snap gained (or allowed) by team’s offense (or\r\ndefense)\r\nIncludes penalty accepted yards\r\nDoes not consider spikes/kneel downs/special teams plays\r\n\r\nAdjusted Yards/Snap:\r\nEmpirical\r\nBayes (shrinkage) Estimate of average yards/snap gained (or allowed)\r\nby team’s offense (or defense)\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-01-07T00:28:45-05:00"
    },
    {
      "path": "about.html",
      "title": "Casey (left)",
      "description": "Why your time is likely better spent elsewhere\n",
      "author": [],
      "contents": "\r\n\r\n          \r\n          \r\n          The Latest Numbers\r\n          \r\n          \r\n          Home\r\n          About\r\n          2022 NFL Team Metrics\r\n          ☰\r\n          \r\n          \r\n      \r\n        \r\n          \r\n            \r\n              \r\n            \r\n              Casey (left)\r\n            \r\n            \r\n              \r\n                \r\n                    \r\n                      \r\n                        GitHub\r\n                      \r\n                    \r\n                  \r\n                                    \r\n                    \r\n                      \r\n                        LinkedIn\r\n                      \r\n                    \r\n                  \r\n                                    \r\n                    \r\n                      \r\n                        Email\r\n                      \r\n                    \r\n                  \r\n                                  \r\n            \r\n          \r\n        \r\n        \r\n        \r\n          \r\n            \r\n            Content\r\n            This blog might well contain explorations of sports\r\n            questions using data. WARNING: I’m an amateur in\r\n            every sense applicable. I’ve always liked sports and math.\r\n            My expertise, if existent, is in the area of nuclear power\r\n            plant operations. Baseball was my first love. With\r\n            less disposable time, I’ve drifted to the NFL. I’ve lived\r\n            most of my life in southwestern PA. Therefore, I’m an\r\n            honest-to-goodness Pirates fan that also likes the Steelers\r\n            and Penguins. I didn’t write a line of code from\r\n            2007 until 2019, when I was introduced to R and the\r\n            tidyverse. This blog contains byproducts of my attempts at\r\n            learning.\r\n            \r\n            \r\n            Blog Name\r\n            This blog’s title is a hat tip to the band toe. I’m indebted to the\r\n            YouTube algorithm for the introduction. If you’re\r\n            reading this, a better use of your time would be to check\r\n            them out here.\r\n            \r\n          \r\n        \r\n      \r\n    \r\n\r\n    \r\n      \r\n        \r\n          \r\n            \r\n              \r\n            \r\n              Casey (left)\r\n            \r\n            \r\n              \r\n                \r\n                                    \r\n                    \r\n                      GitHub\r\n                    \r\n                  \r\n                                    \r\n                    \r\n                      LinkedIn\r\n                    \r\n                  \r\n                                    \r\n                    \r\n                      Email\r\n                    \r\n                  \r\n                                  \r\n              \r\n            \r\n            \r\n              \r\n              Content\r\n              This blog might well contain explorations of sports\r\n              questions using data. WARNING: I’m an amateur in\r\n              every sense applicable. I’ve always liked sports and math.\r\n              My expertise, if existent, is in the area of nuclear power\r\n              plant operations. Baseball was my first love.\r\n              With less disposable time, I’ve drifted to the NFL. I’ve\r\n              lived most of my life in southwestern PA. Therefore, I’m\r\n              an honest-to-goodness Pirates fan that also likes the\r\n              Steelers and Penguins. I didn’t write a line of\r\n              code from 2007 until 2019, when I was introduced to R and\r\n              the tidyverse. This blog contains byproducts of my\r\n              attempts at learning.\r\n              \r\n              \r\n              Blog Name\r\n              This blog’s title is a hat tip to the band toe. I’m indebted to the\r\n              YouTube algorithm for the introduction. If you’re\r\n              reading this, a better use of your time would be to check\r\n              them out here.\r\n              \r\n            \r\n        \r\n      \r\n    \r\n\r\n    \r\n    \r\n    ",
      "last_modified": "2022-10-18T21:06:24-04:00"
    },
    {
      "path": "index.html",
      "title": "The Latest Numbers",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2022-10-18T21:06:51-04:00"
    }
  ],
  "collections": ["posts/posts.json"]
}
