{"frames":[{"func":"nfl_mvt_season(year = 2020) %>% nfl_mvt_season_summary()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"nfl_mvt_season_summary(.)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"df %>% filter(is.na(opponent) == FALSE) %>% group_by(team) %>% \n    summarize(mean_point_diff = mean(mean_point_diff), mean_possession_diff = mean(mean_possession_diff)) %>% \n    ungroup()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ungroup(.)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"summarize(., mean_point_diff = mean(mean_point_diff), mean_possession_diff = mean(mean_possession_diff))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"group_by(., team)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"filter(., is.na(opponent) == FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"nfl_mvt_season(year = 2020)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mvt_season(nfl_teams[i], year)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"load_pbp(year) %>% filter(home_team == team | away_team == team) %>% \n    filter(season_type == \"REG\") %>% select(game_seconds_remaining, \n    posteam, score_differential_post, week, game_half, sp, home_team, \n    away_team)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"select(., game_seconds_remaining, posteam, score_differential_post, \n    week, game_half, sp, home_team, away_team)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"filter(., season_type == \"REG\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"filter(., home_team == team | away_team == team)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"load_pbp(year)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"furrr::future_map_dfr(seasons, single_season, p = p, qs = qs)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"future_map(.x = .x, .f = .f, ..., .options = .options, .env_globals = .env_globals, \n    .progress = .progress)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"furrr_map_template(x = .x, fn = .f, dots = list(...), options = .options, \n    progress = .progress, type = \"list\", map_fn = purrr::map, \n    env_globals = .env_globals)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"furrr_template(args = x, fn = fn, dots = dots, n = n, options = options, \n    progress = progress, type = type, map_fn = map_fn, names = names, \n    env_globals = env_globals, expr = expr, extract = furrr_map_extract)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"future::future(expr, substitute = FALSE, envir = env_globals, \n    stdout = options$stdout, conditions = options$conditions, \n    globals = chunk_globals, packages = chunk_packages, seed = options$seed, \n    lazy = options$lazy, label = labels[[i]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"makeFuture(expr, substitute = FALSE, envir = envir, lazy = lazy, \n    seed = seed, globals = globals, packages = packages, label = label, \n    gc = gc, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"run(future)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"run.UniprocessFuture(future)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(expr, envir = envir, enclos = baseenv())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(expr, envir = envir, enclos = baseenv())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"base::tryCatch({\n    base::withCallingHandlers({\n        ...future.value <- base::withVisible(base::local({\n            future_globals_max_size <- getOption(\"future.globals.maxSize\") ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"base::withCallingHandlers({\n    ...future.value <- base::withVisible(base::local({\n        future_globals_max_size <- getOption(\"future.globals.maxSize\")\n        if (!identical(future_globals_max_size, ...furrr_globals_max_size)) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"base::withVisible(base::local({\n    future_globals_max_size <- getOption(\"future.globals.maxSize\")\n    if (!identical(future_globals_max_size, ...furrr_globals_max_size)) {\n        options(future.globals.maxSize = ...furrr_globals_max_size) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"base::local({\n    future_globals_max_size <- getOption(\"future.globals.maxSize\")\n    if (!identical(future_globals_max_size, ...furrr_globals_max_size)) {\n        options(future.globals.maxSize = ...furrr_globals_max_size) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval.parent(substitute(eval(quote(expr), envir)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(expr, p)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(expr, p)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(quote({\n    future_globals_max_size <- getOption(\"future.globals.maxSize\")\n    if (!identical(future_globals_max_size, ...furrr_globals_max_size)) {\n        options(future.globals.maxSize = ...furrr_globals_max_size) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(quote({\n    future_globals_max_size <- getOption(\"future.globals.maxSize\")\n    if (!identical(future_globals_max_size, ...furrr_globals_max_size)) {\n        options(future.globals.maxSize = ...furrr_globals_max_size) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do.call(...furrr_map_fn, args)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (.x, .f, ...) \n{\n    .f <- as_mapper(.f, ...)\n    .Call(map_impl, environment(), \".x\", \".f\", \"list\") ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".f(.x[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"...furrr_fn(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"readRDS(con)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"no loop for break/next, jumping to top level"}