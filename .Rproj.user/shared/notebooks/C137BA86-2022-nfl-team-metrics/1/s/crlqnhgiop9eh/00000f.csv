"0",""
"0","time_avg_df <- nfltools::nfl_mvt_season(year = 2022) %>%"
"0","  mutate(expected_win_percentage = exp(0.31 * time_avg_lead)/(1 + exp(0.31 * time_avg_lead))) %>%"
"0","  filter(is.na(time_avg_lead) == F) %>%"
"0","  group_by(team) %>%"
"0","  summarize(time_avg_lead = mean(time_avg_lead, na.rm = T),"
"0","            time_avg_wins = sum(expected_win_percentage, na.rm = T),"
"0","            time_avg_win_percent = time_avg_wins/n()) %>%"
"0","  mutate(time_avg_std = scale(time_avg_lead))"
"1","Note: nflreadr caches (i.e., stores a saved version) data by default.
If you expect different output try one of the following:
[34mi[39m Restart your R Session or
[34mi[39m Run `nflreadr::.clear_cache()`.
To disable this warning, run `options(nflreadr.verbose = FALSE)` or add it to your .Rprofile
[90mThis message is displayed once every 8 hours.[39m
"
"0","penalty_yards_gained <- function(df){"
"0","  df %>%"
"0","    mutate(yards_gained = ifelse(play_type_nfl == ""PENALTY"","
"0","                                 ifelse(penalty_team == posteam,"
"0","                                        -1 * penalty_yards,"
"0","                                        penalty_yards),"
"0","                                 yards_gained)) %>%"
"0","    return()"
"0","}"
"0",""
"0","pbp_df <- nflfastR::load_pbp(2022) %>%"
"0","  filter(season_type == ""REG"") %>%"
"0","  filter(play_type_nfl %in% c(""GAME_START"","
"0","                              ""KICK_OFF"","
"0","                              ""PUNT"","
"0","                              ""TIMEOUT"","
"0","                              ""FIELD_GOAL"","
"0","                              ""XP_KICK"","
"0","                              ""END_QUARTER"","
"0","                              ""END_GAME"","
"0","                              ""PAT2"","
"0","                              ""FREE_KICK"","
"0","                              ""COMMENT"") == F) %>%"
"0","  filter(is.na(play_type_nfl) == F) %>%"
"0","  filter(play_type %in% c(""qb_kneel"","
"0","                          ""qb_spike"") == F) %>%"
"0","  filter(grepl(""(Punt formation)"", desc) == F) %>%"
"0","  filter(grepl("", offsetting."", desc) == F) %>%"
"0","  penalty_yards_gained()"
"0",""
"0","mod_rand_int <- lme4::lmer(yards_gained ~ 1 + (1|posteam) + (1|defteam),"
"0","                           data = pbp_df)"
"0",""
"0","off_avg <- pbp_df %>%"
"0","  group_by(posteam) %>%"
"0","  summarize(off_yards_per_snap = mean(yards_gained)) %>%"
"0","  rename(team = posteam)"
"0",""
"0","off_rand_int <- coef(mod_rand_int)$posteam %>%"
"0","  rownames_to_column(var = ""team"") %>%"
"0","  rename(off_adj_yards_per_snap = `(Intercept)`)"
"0",""
"0","def_avg <- pbp_df %>%"
"0","  group_by(defteam) %>%"
"0","  summarize(def_yards_per_snap = mean(yards_gained)) %>%"
"0","  rename(team = defteam)"
"0",""
"0","def_rand_int <- coef(mod_rand_int)$defteam %>%"
"0","  rownames_to_column(var = ""team"") %>%"
"0","  rename(def_adj_yards_per_snap = `(Intercept)`)"
"0",""
"0","per_snap_df <- off_avg %>%"
"0","  left_join(off_rand_int,"
"0","            by = ""team"") %>%"
"0","  left_join(def_avg,"
"0","            by = ""team"") %>%"
"0","  left_join(def_rand_int,"
"0","            by = ""team"")"
"0",""
"0","df <- teams_colors_logos %>%"
"0","  select(team_logo_espn,"
"0","         team_abbr) %>%"
"0","  rename(team = team_abbr) %>%"
"0","  left_join(time_avg_df,"
"0","            by = ""team"") %>%"
"0","  # Removes old team names present in teams_colors_logos data.frame"
"0","  filter(is.na(time_avg_lead) == F) %>%"
"0","  left_join(per_snap_df,"
"0","            by = ""team"") %>%"
"0","  mutate(yards_per_snap_diff = off_yards_per_snap - def_yards_per_snap,"
"0","         adj_yards_per_snap_diff = off_adj_yards_per_snap - def_adj_yards_per_snap) %>%"
"0","  mutate(adj_per_snap_std = scale(adj_yards_per_snap_diff)) %>%"
"0","  mutate(adj_per_snap_percentile = pnorm(adj_per_snap_std))"
"0",""
